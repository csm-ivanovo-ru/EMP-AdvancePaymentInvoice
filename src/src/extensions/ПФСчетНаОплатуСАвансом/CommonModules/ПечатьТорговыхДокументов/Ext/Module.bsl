#Область ПрограммныйИнтерфейс

#Область СчетНаОплату

Функция ПечатьСчетаНаОплатуАванса(СведенияСчетаНаОплату, ОбъектыПечати, СПечатьюИФаксимиле = Ложь) Экспорт

	Перем ПодразделениеОтветственныхЛиц;
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб			= Истина;
	ТабличныйДокумент.ОриентацияСтраницы	= ОриентацияСтраницы.Портрет;
	ТабличныйДокумент.ИмяПараметровПечати	= "ПараметрыПечати_СчетНаОплатуАванса";
	
	ВыводитьКоды = Ложь;
	
	ПервыйДокумент = Истина;
	
	Для Каждого СведенияОДокументе Из СведенияСчетаНаОплату Цикл
		
		Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.СчетНаОплатуПокупателю.ПФ_MXL_СчетНаОплатуАванса");

		Если НЕ ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		ЕстьСкидка = (СведенияОДокументе.ТаблицаДокумента.Итог("СуммаСкидки") <> 0) И ЗначениеЗаполнено(Макет.Области.Найти("Скидка"));
		ЕстьНаценка = (СведенияОДокументе.ТаблицаДокумента.Итог("СуммаНаценки") <> 0) И ЗначениеЗаполнено(Макет.Области.Найти("Наценка"));
		
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		//Выводим важную информацию
		ОбластьИнформация = Макет.ПолучитьОбласть("Информация");
		
		//[+++]Хромов_МА <07.06.2021> задача № 1279
		
		//[+++]Хромов_МА <27.09.2021> задача № 3433
		ВыводитьQR = Константы.ИспользоватьQRкод.Получить(); 
		//--ВыводитьQR = Константы.ИспользоватьQRкод.Получить() И СведенияОДокументе.ПокупательФизЛицо; 
		//[---]Хромов_МА <27.09.2021> задача № 3433
		
		Если ВыводитьQR Тогда 
			ОбластьЗаголовокСчета = Макет.ПолучитьОбласть("ЗаголовокСчетаQR");
		Иначе 
			ОбластьЗаголовокСчета = Макет.ПолучитьОбласть("ЗаголовокСчета");			
		КонецЕсли;
		
		ВыводШапкиПечатнойФормыСчета(ТабличныйДокумент, ОбластьИнформация, ОбластьЗаголовокСчета, СведенияОДокументе, ВыводитьQR);
		//[---]Хромов_МА <07.06.2021> задача № 1279
		
				
		// Выводим заголовок счета
		ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
		ВыводЗаголовкаПечатнойФормыСчета(ОбластьЗаголовок, СведенияОДокументе, "СЧЁТ на оплату (аванс)");
		ТабличныйДокумент.Вывести(ОбластьЗаголовок);
		
		// Выводим информацию об исполнителе
		ОбластьПоставщик = Макет.ПолучитьОбласть("Поставщик");
		ВыводИнформацииОПоставщике(ТабличныйДокумент, ОбластьПоставщик, СведенияОДокументе);
		
		// Выводим информацию о заказчике
		ВыводитьОбластьГрузополучателя = Истина;
		ОбластьПокупатель = Макет.ПолучитьОбласть("Покупатель");
		ВыводИнформацииОПокупателе(ТабличныйДокумент, ОбластьПокупатель, СведенияОДокументе, ВыводитьОбластьГрузополучателя);
		
		Если ВыводитьОбластьГрузополучателя Тогда
			// Выводим информацию о грузополучателе
			ОбластьГрузополучатель = Макет.ПолучитьОбласть("Грузополучатель");
			ВыводИнформацииОГрузополучателе(ТабличныйДокумент, ОбластьГрузополучатель, СведенияОДокументе);
			
		КонецЕсли;
		
		// Выводим информацию об основании
		Если ЗначениеЗаполнено(СведенияОДокументе.ДоговорКонтрагента) Тогда 
			
			ОбластьОснование	   	= Макет.ПолучитьОбласть("Основание");
			ИформацияПоЗаказам		= СокрЛП(СведенияОДокументе.Заказ); 
			Разделитель 			= ?(ЗначениеЗаполнено(СведенияОДокументе.Заказ), " / ", "");
			СтрДоговоКонтрагента 	= СокрЛП(Строка(СведенияОДокументе.ДоговорКонтрагента));
			
			//[+++]Хромов_МА <07.07.2021> задача № 1997
			Если ЗначениеЗаполнено(СведенияОДокументе.ДоговорКонтрагента.ТипДоговора) Тогда
				КДоговоруНачТекст = СокрЛП(СведенияОДокументе.ДоговорКонтрагента.ТипДоговора);
				СтрДоговоКонтрагента = КДоговоруНачТекст + " № " + СведенияОДокументе.НомерДоговора + " от " + Формат(СведенияОДокументе.ДатаДоговора, "ДФ='дд.ММ.гггг'");
			КонецЕсли;
			//[---]Хромов_МА <07.07.2021> задача № 1997
			
			
			//[+++]Хромов_МА <14.06.2021> задача № 1463
			СтрокаИДГосзаказа = "";
			ЗапросИДГосзаказа = Новый Запрос;
			ЗапросИДГосзаказа.Текст = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ИдентификаторыГосзаказа.НомерСтроки КАК НомерСтроки,
			|	ИдентификаторыГосзаказа.ИДГосзаказа КАК ИДГосзаказа
			|ИЗ
			|	Справочник.ДоговорыКонтрагентов.ИдентификаторыГосзаказа КАК ИдентификаторыГосзаказа
			|ГДЕ
			|	ИдентификаторыГосзаказа.Ссылка = &Ссылка
			|
			|УПОРЯДОЧИТЬ ПО
			|	НомерСтроки";
			ЗапросИДГосзаказа.УстановитьПараметр("Ссылка", СведенияОДокументе.ДоговорКонтрагента);
			РезультатЗапросаИДГосзаказа = ЗапросИДГосзаказа.Выполнить();
			ВыборкаИДГосзаказа = РезультатЗапросаИДГосзаказа.Выбрать();
			Пока ВыборкаИДГосзаказа.Следующий() Цикл
				СтрокаИДГосзаказа = ?(ВыборкаИДГосзаказа.НомерСтроки = 1, "ИГК: " + ВыборкаИДГосзаказа.ИДГосзаказа, СтрокаИДГосзаказа + ", ИГК: " + ВыборкаИДГосзаказа.ИДГосзаказа);
			КонецЦикла;
			ОбластьОснование.Параметры.Основание =  СтрДоговоКонтрагента + Разделитель + ИформацияПоЗаказам + ?(ЗначениеЗаполнено(СтрокаИДГосзаказа), Символы.ВК + СтрокаИДГосзаказа, "");
			
			//ОбластьОснование.Параметры.Основание =  СтрДоговоКонтрагента + Разделитель + ИформацияПоЗаказам ;
			//[---]Хромов_МА <14.06.2021> задача № 1463
			
			ТабличныйДокумент.Вывести(ОбластьОснование);       
		
		КонецЕсли;
	
		
		МассивОбластей = Новый Массив;
		ОбластьКолонтитул 		= Макет.ПолучитьОбласть("Колонтитул");
		ОбластьПустаяСтрока 	= Макет.ПолучитьОбласть("ПустаяСтрока");
		ОбластьСтрокаРасширения = Макет.ПолучитьОбласть("СтрокаРасширения");
		
		// ++Выводим подвал с подписями
		//[+++]Хромов_МА <15.12.2021> задача № 3737
		Если СПечатьюИФаксимиле Тогда 
			ОбластьПодвал = Макет.ПолучитьОбласть("ПодвалСчетаСФаксимиле");
			ДвоичныеДанныеПечати = Справочники.Организации.ДвоичныеДанныеКартинкиОрганизации(СведенияОДокументе.Поставщик, "ФайлПечать");
			ОбластьПодвал.Рисунки.Печать.Картинка = Новый Картинка(ДвоичныеДанныеПечати);
			ОтветственныеЛицаОрганизации = ОтветственныеЛицаМПП.ОтветственныеЛица(СведенияОДокументе.Организация, СведенияОДокументе.ДатаДокумента);
			//Руководитель
			Если ЗначениеЗаполнено(СведенияОДокументе.Документ.Руководитель) Тогда 
				ДвоичныеДанныеПодписьРуководителя = Справочники.Сотрудники.ДвоичныеДанныеКартинкиСотрудника(СведенияОДокументе.Документ.Руководитель, "ФайлПодпись");
				ФИОРуководителяИнициалы	= ФизическиеЛицаКлиентСервер.ФамилияИнициалыФизЛица(СведенияОДокументе.Документ.Руководитель.ФИО);
			Иначе 
				ДвоичныеДанныеПодписьРуководителя = Справочники.Организации.ДвоичныеДанныеКартинкиОрганизации(СведенияОДокументе.Поставщик, "ФайлПодписьРуководителя");
				ФИОРуководителяИнициалы	= ФизическиеЛицаКлиентСервер.ФамилияИнициалыФизЛица(ОтветственныеЛицаОрганизации.РуководительПредставление);
			КонецЕсли;
			//ГлавныйБухгалтер
			Если ЗначениеЗаполнено(СведенияОДокументе.Документ.ГлавныйБухгалтер) Тогда 
				ДвоичныеДанныеПодписьГлавногоБухгалтера = Справочники.Сотрудники.ДвоичныеДанныеКартинкиСотрудника(СведенияОДокументе.Документ.ГлавныйБухгалтер, "ФайлПодпись");
				ФИОГлБухгалтераИнициалы	= ФизическиеЛицаКлиентСервер.ФамилияИнициалыФизЛица(СведенияОДокументе.Документ.ГлавныйБухгалтер.ФИО);
			Иначе 
				ДвоичныеДанныеПодписьГлавногоБухгалтера = Справочники.Организации.ДвоичныеДанныеКартинкиОрганизации(СведенияОДокументе.Поставщик, "ФайлПодписьГлавногоБухгалтера");
				ФИОГлБухгалтераИнициалы	= ФизическиеЛицаКлиентСервер.ФамилияИнициалыФизЛица(ОтветственныеЛицаОрганизации.ГлавныйБухгалтерПредставление);
			КонецЕсли;  
			ОбластьПодвал.Рисунки.ПодписьРуководителя.Картинка 			= Новый Картинка(ДвоичныеДанныеПодписьРуководителя);
			ОбластьПодвал.Рисунки.ПодписьГлавногоБухгалтера.Картинка 	= Новый Картинка(ДвоичныеДанныеПодписьГлавногоБухгалтера);
		КонецЕсли;
		//[---]Хромов_МА <15.12.2021> задача № 3737
		
		Если НЕ СПечатьюИФаксимиле Тогда  
			ОбластьПодвал = Макет.ПолучитьОбласть("ПодвалСчета");
			ФИОРуководителяИнициалы	= ФизическиеЛицаКлиентСервер.ФамилияИнициалыФизЛица(СведенияОДокументе.РуководительФИО);		
			ФИОГлБухгалтераИнициалы	= ФизическиеЛицаКлиентСервер.ФамилияИнициалыФизЛица(СведенияОДокументе.ГлавныйБухгалтерФИО);
		КонецЕсли;
		
		ДанныеПечатиПодвалСчета = Новый Структура;
		ДанныеПечатиПодвалСчета.Вставить("ФИОРуководителя", ?(ЗначениеЗаполнено(ФИОРуководителяИнициалы), ФИОРуководителяИнициалы, "						"));
		ДанныеПечатиПодвалСчета.Вставить("ФИОБухгалтера"  , ?(ЗначениеЗаполнено(ФИОГлБухгалтераИнициалы), ФИОГлБухгалтераИнициалы, "						"));
		Если НЕ ЗначениеЗаполнено(СведенияОДокументе.ОснованияПраваПодписиЗаРуководителя) Тогда
			ДанныеПечатиПодвалСчета.Вставить("ОснованиеПодписиРуководителя", СведенияОДокументе.ЗаРуководителяНаОсновании);
		Иначе			
			ДанныеПечатиПодвалСчета.Вставить("ОснованиеПодписиРуководителя", ?(СведенияОДокументе.ОснованияПраваПодписиЗаРуководителя.ВыводитьНаименованиеНаПечать,СведенияОДокументе.ОснованияПраваПодписиЗаРуководителя,""));
		КонецЕсли;
		Если не ЗначениеЗаполнено(СведенияОДокументе.ОснованияПраваПодписиЗаГлавногоБухгалтера) Тогда
			ДанныеПечатиПодвалСчета.Вставить("ОснованиеПодписиБухгалтера"  , СведенияОДокументе.ЗаГлавногоБухгалтераНаОсновании);
		Иначе
			ДанныеПечатиПодвалСчета.Вставить("ОснованиеПодписиБухгалтера"  , ?(СведенияОДокументе.ОснованияПраваПодписиЗаГлавногоБухгалтера.ВыводитьНаименованиеНаПечать,СведенияОДокументе.ОснованияПраваПодписиЗаГлавногоБухгалтера,""));
		КонецЕсли;
		
		ОбластьПодвал.Параметры.Заполнить(ДанныеПечатиПодвалСчета);
		
		// --Выводим подвал с подписями
		
		ОбластьИнтервалПередПодвалом = Макет.ПолучитьОбласть("ИнтервалПередПодвалом");
		
		ПараметрыВыводаТабличнойЧасти = ВыводТабличнойЧастиСИтогамиПечатнойФормыСчетаСтруктураПараметров();
		ПараметрыВыводаТабличнойЧасти.СведенияОДокументе = СведенияОДокументе;
		ПараметрыВыводаТабличнойЧасти.ЭтоАкт = Ложь;
		ПараметрыВыводаТабличнойЧасти.Макет = Макет;
		ПараметрыВыводаТабличнойЧасти.ТабличныйДокумент = ТабличныйДокумент;
		ПараметрыВыводаТабличнойЧасти.ОбластьКолонтитул = ОбластьКолонтитул;
		ПараметрыВыводаТабличнойЧасти.ОбластьПустаяСтрока = ОбластьПустаяСтрока;
		ПараметрыВыводаТабличнойЧасти.ОбластьСтрокаРасширения = ОбластьСтрокаРасширения;
		ПараметрыВыводаТабличнойЧасти.ОбластьИнтервалПередПодвалом = ОбластьИнтервалПередПодвалом;
		ПараметрыВыводаТабличнойЧасти.ОбластьПодвал = ОбластьПодвал;
		
		ВыводТабличнойЧастиСИтогамиПечатнойФормыСчета(ПараметрыВыводаТабличнойЧасти);
		
		МассивОбластей.Добавить(ОбластьИнтервалПередПодвалом); 
		МассивОбластей.Добавить(ОбластьПодвал);
		МассивОбластей.Добавить(ОбластьКолонтитул);
		Если Не ТабличныйДокумент.ПроверитьВывод(МассивОбластей) Тогда
			ВыводКолонтитулаСтраницыДокумента(ТабличныйДокумент, ОбластьПустаяСтрока, ОбластьКолонтитул);
		Иначе
			ТабличныйДокумент.Вывести(ОбластьИнтервалПередПодвалом);
		КонецЕсли;
		МассивОбластей.Очистить();  
		
		ТабличныйДокумент.Вывести(ОбластьПодвал);
		
		ВыводКолонтитулаСтраницыДокумента(ТабличныйДокумент, ОбластьПустаяСтрока, ОбластьКолонтитул);
		
		// В табличном документе зададим имя области, в которую был 
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, 
			НомерСтрокиНачало, ОбъектыПечати, СведенияОДокументе.Документ);

	КонецЦикла;

	Возврат ТабличныйДокумент;

КонецФункции

#КонецОбласти

#КонецОбласти

#Область ВспомогательныеПроцедурыФункции

Функция ПолучитьРеквизитыСчётаНаОплату(СведенияОДокументе, ИмяДокументаПрописью="СЧЁТ на оплату")
	
	РеквизитыСчёта = Новый Структура;

	НомерДокумента = СокрЛП(СведенияОДокументе.НомерДокумента);
	ПрефиксНомераСчёта="С-";
	Если ИмяДокументаПрописью="СЧЁТ на оплату (аванс)" Тогда
		ПрефиксНомераСчёта="СА-";
	КонецЕсли;
	НомерДокумента = СтрЗаменить(НомерДокумента, "С-", ПрефиксНомераСчёта);
	Если СведенияОДокументе.ГосОборонЗаказ Тогда
		ФорматПолногоНомера = "%1/%2";
	Иначе
		ФорматПолногоНомера = "%2";
	Конецесли;
	ПолныйНомерДокумента = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ФорматПолногоНомера, СведенияОДокументе.ИДГосзаказа, НомерДокумента);
	РеквизитыСчёта.Вставить("НомерСчета", ПолныйНомерДокумента);

	РеквизитыСчёта.Вставить("ДатаСчета", Формат(СведенияОДокументе.ДатаДокумента, "ДФ='дд ММММ гггг'' г.'"));
	
	ТекстЗаголовка = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='%1 от %3 № %2'"),
		ИмяДокументаПрописью, РеквизитыСчёта.НомерСчета, РеквизитыСчёта.ДатаСчета);
	РеквизитыСчёта.Вставить("ТекстЗаголовка", ТекстЗаголовка);
	
	Возврат РеквизитыСчёта;
	
КонецФункции

&Вместо("ВыводШапкиПечатнойФормыСчета")
Процедура ИвЦСМ_ВыводШапкиПечатнойФормыСчета(ТабличныйДокумент, ОбластьИнформация, ОбластьЗаголовокСчета, СведенияОДокументе, ВыводитьQR)
	
    ДанныеПечатиИнформации = ПолучитьРеквизитыСчётаНаОплату(СведенияОДокументе);

	КБК 	  = СведенияОДокументе.Получатель.КодБК;
	ОКТМО	  = СведенияОДокументе.Получатель.ОКТМО;
	СуммаНДС  = СведенияОДокументе.ТаблицаДокумента.Итог("СуммаНДС");
#Область ИвЦСМСведенияОбАвансе
	ПроцентПредоплаты = СведенияОДокументе.ДоговорКонтрагента.Предоплата.ПроцентПредоплаты;
	АвансНДС  = СуммаНДС * ПроцентПредоплаты / 100;
#КонецОбласти
	
	Если НЕ ЗначениеЗаполнено(КБК) Тогда
		КБК = "-";
	КонецЕсли;
	
	ДанныеПечатиИнформации.Вставить("КБК"		, КБК);
	ДанныеПечатиИнформации.Вставить("СуммаНДС"	, ОбщегоНазначенияМППВызовСервера.ФорматСумм(СуммаНДС));
#Область ИвЦСМСведенияОбАвансе
	ДанныеПечатиИнформации.Вставить("АвансНДС"	, ОбщегоНазначенияМППВызовСервера.ФорматСумм(АвансНДС));
	ДанныеПечатиИнформации.Вставить("ПроцентПредоплаты", Формат(ПроцентПредоплаты, "ЧЦ=3; ЧДЦ=0; ЧФ=""Ч %"""));
#КонецОбласти
	
	ОбластьИнформация.Параметры.Заполнить(ДанныеПечатиИнформации);
	ТабличныйДокумент.Вывести(ОбластьИнформация);		
	
	// Выводим шапку счета
	ОбластьЗаголовокСчета.Параметры.Заполнить(СведенияОДокументе);
	
	СведенияОПолучателе = МПП_Переопределяемый.СведенияОЮрФизЛице(СведенияОДокументе.Получатель, СведенияОДокументе.ДатаДляПолученияСведений);		
	ДанныеПечатиЗаголовокСчета = ДанныеПечатиИнформации;
	ДанныеПечатиЗаголовокСчета.Вставить("ИННПолучателя", СведенияОПолучателе.ИНН);
	ДанныеПечатиЗаголовокСчета.Вставить("КПППолучателя", СведенияОПолучателе.КПП);
	
	Если ТипЗнч(СведенияОДокументе.БанковскийСчетПродавца) = Тип("СправочникСсылка.БанковскиеСчета") Тогда
		ДанныеПечатиЗаголовокСчета.Вставить("БИКБанкаПолучателя",				СведенияОДокументе.БикБанкаПолучателя);
		ДанныеПечатиЗаголовокСчета.Вставить("БанкПолучателя",					СведенияОДокументе.БанкПолучателя);
		ДанныеПечатиЗаголовокСчета.Вставить("БанкПолучателяПредставление",		СокрЛП(СведенияОДокументе.НаименованиеБанкаПолучателя));
		ДанныеПечатиЗаголовокСчета.Вставить("СчетБанкаПолучателя",				СведенияОДокументе.СчетБанкаПолучателя);
		ДанныеПечатиЗаголовокСчета.Вставить("СчетБанкаПолучателяПредставление",	СведенияОДокументе.СчетБанкаПолучателя);
		ДанныеПечатиЗаголовокСчета.Вставить("СчетПолучателяПредставление",		СведенияОДокументе.НомерСчетаПолучателя);
		ДанныеПечатиЗаголовокСчета.Вставить("СчетПолучателя",					СведенияОДокументе.НомерСчетаПолучателя);
		ДанныеПечатиЗаголовокСчета.Вставить("КБК", 								КБК);
		ДанныеПечатиЗаголовокСчета.Вставить("ОКТМО", 							ОКТМО);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СведенияОДокументе.БанковскийСчетПродавца.ПолучательПлатежаУФК) Тогда
		ПредставлениеПолучателя = СведенияОДокументе.БанковскийСчетПродавца.ПолучательПлатежаУФК;
	ИначеЕсли ЗначениеЗаполнено(СведенияОДокументе.Получатель.НаименованиеПолучателя) Тогда
		ПредставлениеПолучателя = СведенияОДокументе.Получатель.НаименованиеПолучателя;
	Иначе
		ПредставлениеПолучателя = ПечатьТорговыхДокументов.СформироватьТекстНаименованияПлательщикаПолучателя(
			, 
			СведенияОДокументе.Получатель, 
			СведенияОДокументе.БанковскийСчетПродавца);
	КонецЕсли;
		
	ДанныеПечатиЗаголовокСчета.Вставить("ПредставлениеПолучателя", ПредставлениеПолучателя);
	
	ОбластьЗаголовокСчета.Параметры.Заполнить(ДанныеПечатиЗаголовокСчета);
	
	//[+++]Хромов_МА <07.06.2021> задача № 1279
	Если ВыводитьQR Тогда 
		
		ОбластьРисунка   = ОбластьЗаголовокСчета.Области.Найти("РисунокQR");
		РеквизитыПлатежа = QRКодРеквизитыПлатежа(СведенияОДокументе, ДанныеПечатиЗаголовокСчета);
		
		////++Заполняем ФИО Плательщика
		МассивПодстрок = СтрРазделить(СведенияОДокументе.Покупатель, " ");
		МаксимальныйИндексМассива = МассивПодстрок.Количество() - 1;
		Для Индекс = 0 По МаксимальныйИндексМассива Цикл
			Если Индекс = 0 Тогда 
				РеквизитыПлатежа.ФамилияПлательщика  = МассивПодстрок[Индекс];
				Продолжить;
			КонецЕсли;
			Если Индекс = 1 Тогда 
				РеквизитыПлатежа.ИмяПлательщика  	 = МассивПодстрок[Индекс];
				Продолжить;
			КонецЕсли;
			Если Индекс = 2 Тогда 
				РеквизитыПлатежа.ОтчествоПлательщика = МассивПодстрок[Индекс];
				Продолжить;
			КонецЕсли;
			Если Индекс > 2 Тогда 
				РеквизитыПлатежа.ОтчествоПлательщика = РеквизитыПлатежа.ОтчествоПлательщика + " " + МассивПодстрок[Индекс];
			КонецЕсли;
		КонецЦикла;
		
		//Если МассивПодстрок.Количество() > 0 Тогда		
		//	РеквизитыПлатежа.ФамилияПлательщика  = МассивПодстрок[0];
		//КонецЕсли;
		//Если МассивПодстрок.Количество() > 1 Тогда		
		//	РеквизитыПлатежа.ИмяПлательщика 	 = МассивПодстрок[1];
		//КонецЕсли;
		//Если МассивПодстрок.Количество() > 2 Тогда		
		//	РеквизитыПлатежа.ОтчествоПлательщика = МассивПодстрок[2];
		//КонецЕсли;
		////--Заполняем ФИО Плательщика
		
		////++Заполняем АдресПлательщика
		Если ЗначениеЗаполнено(СведенияОДокументе.Покупатель.ГоловнойКонтрагент) И СведенияОДокументе.Покупатель.ОбособленноеПодразделение Тогда
			Плательщик = СведенияОДокументе.Покупатель.ГоловнойКонтрагент;
		Иначе
			Плательщик = СведенияОДокументе.Покупатель;
		КонецЕсли;		
		СведенияОПокупателе     			= МПП_Переопределяемый.СведенияОЮрФизЛице(Плательщик, СведенияОДокументе.ДатаДляПолученияСведений);
		РеквизитыПлатежа.АдресПлательщика   = ОбщегоНазначенияМППВызовСервера.ОписаниеОрганизации(СведенияОПокупателе, "ЮридическийАдрес,");
		////--Заполняем АдресПлательщика
		
		QRСтрока = УправлениеПечатью.ФорматнаяСтрокаУФЭБС(РеквизитыПлатежа);
		
		ДвоичныеДанныеQRКода	= УправлениеПечатью.ДанныеQRКода(QRСтрока, 0, 190);
		Если ТипЗнч(ДвоичныеДанныеQRКода) = Тип("ДвоичныеДанные") Тогда
			КартинкаQRКода 			= Новый Картинка(ДвоичныеДанныеQRКода);
		КонецЕсли;
		ОбластьРисунка.Картинка = КартинкаQRКода;
		
	КонецЕсли;
	//[---]Хромов_МА <07.06.2021> задача № 1279
	
	ТабличныйДокумент.Вывести(ОбластьЗаголовокСчета);
	
КонецПроцедуры

&Вместо("ВыводЗаголовкаПечатнойФормыСчета")
Процедура ИвЦСМ_ВыводЗаголовкаПечатнойФормыСчета(ОбластьЗаголовок, СведенияОДокументе, ИмяДокументаПрописью)
	
	РеквизитыСчёта = ПолучитьРеквизитыСчётаНаОплату(СведенияОДокументе, ИмяДокументаПрописью);
	ОбластьЗаголовок.Параметры.Заполнить(РеквизитыСчёта);

КонецПроцедуры

&Вместо("ВыводТабличнойЧастиСИтогамиПечатнойФормыСчета")
Процедура ИвЦСМ_ВыводТабличнойЧастиСИтогамиПечатнойФормыСчета(ПараметрыВыводаТабличнойЧасти)

	СведенияОДокументе 				= ПараметрыВыводаТабличнойЧасти.СведенияОДокументе;
	ЭтоАкт 							= ПараметрыВыводаТабличнойЧасти.ЭтоАкт;
	Макет 							= ПараметрыВыводаТабличнойЧасти.Макет;
	ТабличныйДокумент 				= ПараметрыВыводаТабличнойЧасти.ТабличныйДокумент;
	ОбластьКолонтитул 				= ПараметрыВыводаТабличнойЧасти.ОбластьКолонтитул;
	ОбластьПустаяСтрока 			= ПараметрыВыводаТабличнойЧасти.ОбластьПустаяСтрока;
	ОбластьСтрокаРасширения 		= ПараметрыВыводаТабличнойЧасти.ОбластьСтрокаРасширения;
	ОбластьИнтервалПередПодвалом 	= ПараметрыВыводаТабличнойЧасти.ОбластьИнтервалПередПодвалом;
	ОбластьПодвал 					= ПараметрыВыводаТабличнойЧасти.ОбластьПодвал;
	
	МассивОбластей = Новый Массив;
	
	ОбластьИтоги = Макет.ПолучитьОбласть("ИтогиОборудование");			
	//[+++] Костерин_ОВ 12.07.2021 задача № 2117
	Если ПараметрыВыводаТабличнойЧасти.Свойство("ТипДоговораРП_Результат") Тогда
		ОбластьИтоги.Параметры.ТипДоговораРП_Результат = ПараметрыВыводаТабличнойЧасти.ТипДоговораРП_Результат;  
	КонецЕсли;
	
	Если ПараметрыВыводаТабличнойЧасти.Свойство("ТипДоговораДП_Результат") Тогда
		ОбластьИтоги.Параметры.ТипДоговораДП_Результат = ПараметрыВыводаТабличнойЧасти.ТипДоговораДП_Результат; 
	КонецЕсли;
	//[---] Костерин_ОВ 12.07.2021 задача № 2117
	
	// Выводим таблицу работ и услуг
	ОбластьШапкаОборудования = Макет.ПолучитьОбласть("ШапкаОборудования");
#Область ИвЦСМСведенияОбАвансе
	ДанныеПечатиШапкаОборудования = Новый Структура;
	ПроцентПредоплаты = СведенияОДокументе.ДоговорКонтрагента.Предоплата.ПроцентПредоплаты;
	ДанныеПечатиШапкаОборудования.Вставить("ПроцентПредоплаты", Формат(ПроцентПредоплаты, "ЧЦ=3; ЧДЦ=0; ЧФ=""Ч %"""));
	ОбластьШапкаОборудования.Параметры.Заполнить(ДанныеПечатиШапкаОборудования);
#КонецОбласти
	ТабличныйДокумент.Вывести(ОбластьШапкаОборудования);
		
	ДанныеСуммовыхАгрегаторов = Новый Структура("Сумма, СуммаНДС, ВсегоСкидок, ВсегоНаценок, ОбщаяСумма, ВсегоКоличество, ВсегоКомплектов", 0, 0, 0, 0, 0, 0, 0);
#Область ИвЦСМСведенияОбАвансе
	ДанныеСуммовыхАгрегаторов.Вставить("Аванс", 0);
	ДанныеСуммовыхАгрегаторов.Вставить("АвансНДС", 0);
#КонецОбласти
	СтавкаНДС	= "";	
	НомерСтроки = 0; 
	КоличествоСтрок = СведенияОДокументе.ТаблицаДокумента.Количество();
	ЕстьДанныеКоличествоКомплектов = СведенияОДокументе.ТаблицаДокумента.Колонки.Найти("КоличествоКомплектов") <> Неопределено;
	
	Для Каждого Строка Из СведенияОДокументе.ТаблицаДокумента Цикл
		
		НомерСтроки = НомерСтроки + 1;
		ДанныеПечатиСтрокаОбластьДанных = Новый Структура;			
		ДанныеПечатиСтрокаОбластьДанных.Вставить("НомерПП", НомерСтроки);
		
		КодСИ = "";
		Если ТипЗнч(Строка.СИКлиента) = Тип("СправочникСсылка.СредстваИзмеренийКлиентов") Тогда 
			КодСИ = Строка.СИКлиента.СредствоИзмерений.КодСИ;
		КонецЕсли;
		
		ДанныеПечатиСтрокаОбластьДанных.Вставить("Наименование", Строка.Содержание);
		Если ЭтоАкт Тогда      			
			//[+++]Хромов_МА <10.06.2021> задача № 1321
			Если ТипЗнч(Строка.СИКлиента) = Тип("СправочникСсылка.СредстваИзмеренийКлиентов") Тогда
				ДанныеПечатиСтрокаОбластьДанных.Вставить("ЗаводскойНомер", ?(Строка.КоличествоСгруппированныхСтрок > 1, "", Строка.ЗаводскойНомер));
			//[+++]Хромов_МА <29.09.2021> задача № 3499	
			ИначеЕсли ТипЗнч(Строка.СИКлиента) = Тип("СправочникСсылка.ИспытательноеОборудованиеКлиентов") И Строка.ВидРаботы.ВидИспользования = Перечисления.ВидыИспользованияВидовРабот.ИспытательныеОборудования Тогда
				ДанныеПечатиСтрокаОбластьДанных.Вставить("ЗаводскойНомер", ?(Строка.КоличествоСгруппированныхСтрок > 1, "", Строка.ЗаводскойНомер));
			//[---]Хромов_МА <29.09.2021> задача № 3499	
			Иначе
				ЗаводскиеНомера = "";
				ВыводитьЗаводскойНомерНаПечать = (Строка.Количество = 1) ИЛИ СведенияОДокументе.ВыводитьЗаводскиеНомераНаПФ; 
				Если ЗначениеЗаполнено(Строка.КлючСвязи) И ВыводитьЗаводскойНомерНаПечать Тогда 
					ПараметрыОтбора = Новый Структура("КлючСвязи", Строка.КлючСвязи);
					МассивНайденыхСтрок = СведенияОДокументе.ЗаводскиеНомераПоГруппамСИ.НайтиСтроки(ПараметрыОтбора);
					Для Каждого ЭлементМассива Из МассивНайденыхСтрок Цикл
						Если ЗначениеЗаполнено(ЗаводскиеНомера) Тогда 
							ЗаводскиеНомера = ЗаводскиеНомера + ", " + ЭлементМассива.ЗаводскойНомер;
						Иначе 
							ЗаводскиеНомера = ЭлементМассива.ЗаводскойНомер;								
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
				ДанныеПечатиСтрокаОбластьДанных.Вставить("ЗаводскойНомер", ЗаводскиеНомера);
			КонецЕсли;
			//ДанныеПечатиСтрокаОбластьДанных.Вставить("ЗаводскойНомер", Строка.ЗаводскойНомер);
			//[---]Хромов_МА <10.06.2021> задача № 1321
			
			ДанныеПечатиСтрокаОбластьДанных.Вставить("КоличествоКомплектов", 0);
			Цена = Строка.Цена;
			
			Если Строка.Комплект Тогда
				ДанныеПечатиСтрокаОбластьДанных.Вставить("КоличествоКомплектов", Строка.Количество);
				ДанныеПечатиСтрокаОбластьДанных.Вставить("Количество", 			 Строка.Количество * Строка.КоличествоВКомплекте);  //[+++] Костерин_ОВ 08.06.2021 задача № 1349
				Если Строка.ЦенаЕдиницыВКомплекте <> 0 Тогда 
					Цена = Строка.ЦенаЕдиницыВКомплекте;	
				КонецЕсли;
			Иначе
				ДанныеПечатиСтрокаОбластьДанных.Вставить("Количество"		   , Строка.Количество);
			КонецЕсли;
			
		Иначе	               			
			ДанныеПечатиСтрокаОбластьДанных.Вставить("Количество", Строка.Количество);						
			Если ЕстьДанныеКоличествоКомплектов 
				И Строка.КоличествоКомплектов <> Неопределено
				И Строка.КоличествоКомплектов <> Строка.Количество Тогда
				ДанныеПечатиСтрокаОбластьДанных.Вставить("КоличествоКомплектов", Строка.КоличествоКомплектов);						
			КонецЕсли;
			
			Если Строка.Количество = 1 Тогда
				Цена = (Строка.Сумма - Строка.СуммаНаценки + Строка.СуммаСкидки);
			ИначеЕсли Строка.СуммаНаценки <> 0 ИЛИ Строка.СуммаСкидки <> 0 Тогда
				Цена = (Строка.Сумма - Строка.СуммаНаценки + Строка.СуммаСкидки) / Строка.Количество;
			Иначе
				Цена = Строка.Цена;
			КонецЕсли;
		КонецЕсли;             		
		
		ПроцентСкидкиНаценки = ?(Строка.ПроцентНаценки = 0, -Строка.ПроцентСкидки, Строка.ПроцентНаценки - Строка.ПроцентСкидки);
		СуммаСкидкиНаценки 	 = Строка.СуммаНаценки - Строка.СуммаСкидки;
		
		ДанныеПечатиСтрокаОбластьДанных.Вставить("Цена"			 , ОбщегоНазначенияМППВызовСервера.ФорматСумм(Цена));
		ДанныеПечатиСтрокаОбластьДанных.Вставить("Сумма"		 , ОбщегоНазначенияМППВызовСервера.ФорматСумм(Строка.Сумма + Строка.СуммаСкидки - Строка.СуммаНаценки));
		ДанныеПечатиСтрокаОбластьДанных.Вставить("ПроцентНаценки", ПроцентСкидкиНаценки);
		ДанныеПечатиСтрокаОбластьДанных.Вставить("ЦенаНаценки"	 , ?(Строка.Количество = 0, 0, ОбщегоНазначенияМППВызовСервера.ФорматСумм(СуммаСкидкиНаценки / ДанныеПечатиСтрокаОбластьДанных.Количество)));
		ДанныеПечатиСтрокаОбластьДанных.Вставить("СуммаНаценки"	 , ОбщегоНазначенияМППВызовСервера.ФорматСумм(СуммаСкидкиНаценки));
		ДанныеПечатиСтрокаОбластьДанных.Вставить("СуммаВсего"	 , ОбщегоНазначенияМППВызовСервера.ФорматСумм(Строка.Сумма));
#Область ИвЦСМСведенияОбАвансе
		СтрокаАванс = Окр(Строка.Сумма * ПроцентПредоплаты / 100, 2);
		СтрокаАвансНДС = Окр(Строка.СуммаНДС * ПроцентПредоплаты / 100, 2);
		ДанныеПечатиСтрокаОбластьДанных.Вставить("Аванс"	 	 , ОбщегоНазначенияМППВызовСервера.ФорматСумм(СтрокаАванс));
		ДанныеПечатиСтрокаОбластьДанных.Вставить("АвансНДС"	 	 , ОбщегоНазначенияМППВызовСервера.ФорматСумм(СтрокаАвансНДС));
#КонецОбласти
		Если ЭтоАкт Тогда
			Отдел = "";
			Если ЗначениеЗаполнено(Строка.ПодразделениеОрганизации) Тогда
				Отдел = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Строка.ПодразделениеОрганизации.НомерКарточки);	
			КонецЕсли;
			ДанныеПечатиСтрокаОбластьДанных.Вставить("Отдел", Отдел); 
		КонецЕсли;
			
		ОбластьСтрока = Макет.ПолучитьОбласть("СтрокаОборудование");
		ОбластьСтрока.Параметры.Заполнить(ДанныеПечатиСтрокаОбластьДанных);
		
		//МассивОбластей.Добавить(ОбластьСтрокаРасширения);			
		МассивОбластей.Добавить(ОбластьСтрока);
		//[+++] Исламов_АС 04.06.2021 задача № 1231
		//МассивОбластей.Добавить(ОбластьПустаяСтрока);		// При переносе суммы в области итого на новой странице выводился только подвал счета.
		//[---] Исламов_АС задача № 1231
		//МассивОбластей.Добавить(ОбластьСтрокаРасширения);			
		МассивОбластей.Добавить(ОбластьИтоги);					
		Если ОбластьИнтервалПередПодвалом <> Неопределено Тогда  			
			МассивОбластей.Добавить(ОбластьИнтервалПередПодвалом);			
		КонецЕсли;
		МассивОбластей.Добавить(ОбластьПодвал);			
		МассивОбластей.Добавить(ОбластьКолонтитул);
		
		ПоследняяСтрока = НомерСтроки = КоличествоСтрок;
		
		Если Не ТабличныйДокумент.ПроверитьВывод(МассивОбластей) Тогда
			ВыводКолонтитулаСтраницыДокумента(ТабличныйДокумент, ОбластьПустаяСтрока, ОбластьКолонтитул);
			ТабличныйДокумент.Вывести(ОбластьШапкаОборудования);
		КонецЕсли;
		МассивОбластей.Очистить();
		
		//ТабличныйДокумент.Вывести(ОбластьСтрокаРасширения);
		ТабличныйДокумент.Вывести(ОбластьСтрока);
		//ТабличныйДокумент.Вывести(ОбластьСтрокаРасширения);
		
		ДанныеСуммовыхАгрегаторов.Сумма			= ДанныеСуммовыхАгрегаторов.Сумма + Строка.Сумма + Строка.СуммаСкидки - Строка.СуммаНаценки;
		ДанныеСуммовыхАгрегаторов.СуммаНДС		= ДанныеСуммовыхАгрегаторов.СуммаНДС + Строка.СуммаНДС;
		ДанныеСуммовыхАгрегаторов.ВсегоСкидок	= ДанныеСуммовыхАгрегаторов.ВсегоСкидок + Строка.СуммаСкидки;
		ДанныеСуммовыхАгрегаторов.ВсегоНаценок	= ДанныеСуммовыхАгрегаторов.ВсегоНаценок + Строка.СуммаНаценки - Строка.СуммаСкидки;
		ДанныеСуммовыхАгрегаторов.ОбщаяСумма	= ДанныеСуммовыхАгрегаторов.ОбщаяСумма + Строка.Сумма;
#Область ИвЦСМСведенияОбАвансе
		ДанныеСуммовыхАгрегаторов.Аванс			= ДанныеСуммовыхАгрегаторов.Аванс + СтрокаАванс;
		ДанныеСуммовыхАгрегаторов.АвансНДС		= ДанныеСуммовыхАгрегаторов.АвансНДС + СтрокаАвансНДС;
#КонецОбласти
		Если ЭтоАкт И Строка.Комплект Тогда
			ДанныеСуммовыхАгрегаторов.ВсегоКомплектов	= ДанныеСуммовыхАгрегаторов.ВсегоКомплектов + Строка.Количество;
			ДанныеСуммовыхАгрегаторов.ВсегоКоличество	= ДанныеСуммовыхАгрегаторов.ВсегоКоличество + Строка.Количество * Строка.КоличествоВКомплекте;  //[+++] Костерин_ОВ 08.06.2021 задача № 1349
		Иначе
			Если ЕстьДанныеКоличествоКомплектов 
				И Строка.КоличествоКомплектов <> Неопределено
				И Строка.КоличествоКомплектов <> Строка.Количество Тогда
				ДанныеСуммовыхАгрегаторов.ВсегоКомплектов	= ДанныеСуммовыхАгрегаторов.ВсегоКомплектов + Строка.КоличествоКомплектов;
				//[+++] Трошина_ЕС 26.05.2021 задача № 1019
				ДанныеСуммовыхАгрегаторов.ВсегоКоличество	= ДанныеСуммовыхАгрегаторов.ВсегоКоличество + Строка.Количество;
				//[---] Трошина_ЕС задача № 1019
			Иначе
				ДанныеСуммовыхАгрегаторов.ВсегоКоличество	= ДанныеСуммовыхАгрегаторов.ВсегоКоличество + Строка.Количество;
			КонецЕсли;
		КонецЕсли;
		
		СтавкаНДС = Строка.СтавкаНДС;
		
	КонецЦикла;        
	
	// Выводим раздел по итогам таблицы оборудования		
	ОбщаяСуммаИтог = ДанныеСуммовыхАгрегаторов.ОбщаяСумма;
	АвансИтог = ДанныеСуммовыхАгрегаторов.Аванс;
	Если Не СведенияОДокументе.СуммаВключаетНДС Тогда
		ОбщаяСуммаИтог = ОбщаяСуммаИтог + ДанныеСуммовыхАгрегаторов.СуммаНДС;
		АвансИтог = АвансИтог + ДанныеСуммовыхАгрегаторов.АвансНДС;
	КонецЕсли;
	
	ДанныеИтог = Новый Структура;
	ДанныеИтог.Вставить("КоличествоКомплектов", ДанныеСуммовыхАгрегаторов.ВсегоКомплектов);
	ДанныеИтог.Вставить("Количество"		  , ДанныеСуммовыхАгрегаторов.ВсегоКоличество);		
	ДанныеИтог.Вставить("Сумма"				  , ДанныеСуммовыхАгрегаторов.Сумма);
	ДанныеИтог.Вставить("СуммаНаценки"		  , ДанныеСуммовыхАгрегаторов.ВсегоНаценок);
	ДанныеИтог.Вставить("СуммаВсего"		  , ДанныеСуммовыхАгрегаторов.ОбщаяСумма);
	ДанныеИтог.Вставить("СуммаНДС"			  , ДанныеСуммовыхАгрегаторов.СуммаНДС);
#Область ИвЦСМСведенияОбАвансе
	ДанныеИтог.Вставить("Аванс"				  , ДанныеСуммовыхАгрегаторов.Аванс);
	ДанныеИтог.Вставить("АвансНДС"			  , ДанныеСуммовыхАгрегаторов.АвансНДС);
	ДанныеИтог.Вставить("ОбщаяСуммаАванса"	  , АвансИтог);
	ДанныеИтог.Вставить("СуммаАвансаПрописью" , РаботаСКурсамиВалют.СформироватьСуммуПрописью(АвансИтог, Константы.ВалютаРегламентированногоУчета.Получить()));
#КонецОбласти
	ДанныеИтог.Вставить("СтавкаНДС"			  , СтавкаНДС);
	ДанныеИтог.Вставить("ОбщаяСумма"		  , ОбщаяСуммаИтог);
	ДанныеИтог.Вставить("СуммаПрописью"		  , РаботаСКурсамиВалют.СформироватьСуммуПрописью(ОбщаяСуммаИтог, Константы.ВалютаРегламентированногоУчета.Получить()));
	
	ОбластьИтоги.Параметры.Заполнить(ДанныеИтог);		
	ТабличныйДокумент.Вывести(ОбластьИтоги);

КонецПроцедуры

#КонецОбласти

